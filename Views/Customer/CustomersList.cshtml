@using Champions.Models;
@model  Tuple<List<CustomerModel>, List<User_Games>>



@{
    ViewBag.Title = "CustomersList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid h-100 mt-5 text-center">
    <br />
    <br />
    <h3 class="mb-3 font-weight-normal" style="color:white">טבלה</h3>

    <div class="table-responsive ">
        <table id="myTable" class="table table-striped table-bordered text-center overflow-hidden">
            <tr>
                <th>שם משתמש</th>
                <th>ניקוד</th>
                @if (Session["FirstName"] != null && (string)Session["AdimCode"] == "Admin")
                {
                    <th></th>
                }

            </tr>

            @foreach (var item in Model.Item1)
            {
                int points = (Model.Item2.Where(y => y.UserName == item.UserName).Sum(y => y.Score) + item.WinPlayerGoals * 2);
                <tr>
                    <td>
                        <div class="row d-inline-block float-right m-2 m-sm-1">
                            <img src="@item.Image" alt="" class="rounded shadow-lg" style="width:3em">
                            @Html.DisplayFor(modelItem => item.UserName)
                        </div>
                    </td>
                    <td>
                        @points
                    </td>
                    @if (Session["FirstName"] != null && (string)Session["AdimCode"] == "Admin")
                    {
                        <td>
                            @Html.ActionLink("ערוך", "CustomersPage", new { id = item.ID }, new { @class = "btn btn-sm btn-secondary" }) |
                            @Html.ActionLink("מחק", "Delete", new { id = item.ID }, new { @class = "btn btn-sm btn-secondary" })
                        </td>
                    }

                </tr>
            }
        </table>
    </div>
</div>


@section Scripts{
    <script>

        $(window).on('load', function () {
            sortTable();
        })

        function sortTable() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("myTable");
            switching = true;
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    /* Get the two elements you want to compare,
                    one from current row and one from the next: */
                    x = rows[i].getElementsByTagName("TD")[1];
                    y = rows[i + 1].getElementsByTagName("TD")[1];
                    console.log(x.innerHTML);
                    console.log(y.innerHTML);
                    if (parseInt(x.innerHTML) < parseInt(y.innerHTML)) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }
        }
    </script>
}




